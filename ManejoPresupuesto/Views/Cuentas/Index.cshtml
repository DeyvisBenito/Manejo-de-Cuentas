@model IEnumerable<BalanceCuentasViewModel>
@{
    ViewData["Title"] = "Cuentas";
}

<div class="text-center">
    <h1>Cuentas</h1>
</div>
<div class="text-end" style="justify-content: space-between; width: 95%; ">
    <a class="btn btn-success mb-3" asp-action="Crear">Agregar Cuenta</a>
</div>

<div class="contenedor-totales mb-3">
    <div class="activo">
        <div>
            <strong>Activos</strong>
        </div>
        <div>
            @formatoMiles(Model.Where(x => x.Balance > 0).Sum(x => x.Balance))
        </div>
    </div>
    <div class="pasivo">
        <div>
            <strong>Pasivos</strong>
        </div>
        <div>
            @formatoMiles(Model.Where(x => x.Balance < 0).Sum(x => x.Balance))
        </div>
    </div>
    <div>
        @{
            var claseBalanceTotal = claseBalance(Model.Sum(x => x.Balance));
        }
        <div>
            <strong>Total</strong>
        </div>
        <div class="@claseBalanceTotal">
            @formatoMiles(Model.Sum(x => x.Balance))
        </div>
    </div>
</div>

<div class="accordion acordeon-cuentas">
    @foreach (var cuenta in Model)
    {
        <div class="accordion-item">
            <h2 class="accordion-header cabeceraUno">
                @{
                    var id = cuenta.TipoCuenta.Replace(" ", "");
                    var dataBSTarger = "#" + id;
                    var claseTipoCuentaBalance = claseBalance(cuenta.Balance);
                }
                <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="@dataBSTarger">
                    <span class="me-3">
                        <span><strong>@cuenta.TipoCuenta</strong></span>
                        <span class="@claseTipoCuentaBalance">@formatoMiles(cuenta.Balance)</span>
                    </span>
                </button>
            </h2>

            <div id="@id" class="accordion-collapse collapse show">
                <div>
                    <ul class="list-group">
                        @foreach (var cuenta1 in cuenta.Cuenta)
                        {
                            var claseCuenta = claseBalance(cuenta1.Balance);
                            <li class="list-group-item lista-cuentas">
                                <span><strong>@cuenta1.Nombre</strong></span>
                                <span class="@claseCuenta">@formatoMiles(cuenta1.Balance)
                                <a asp-action="Editar" asp-route-id="@cuenta1.Id" class="btn btn-primary">
                                        <i class="bi bi-pencil-fill"></i>
                                </a>
                                <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@cuenta1.Id">
                                        <i class="bi bi-trash-fill"></i>
                                </a>
                                </span>

                            </li>
                        }
                    </ul>
                </div>
                
            </div>
        </div>
    }
</div>


@{
    string formatoMiles(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string claseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}
