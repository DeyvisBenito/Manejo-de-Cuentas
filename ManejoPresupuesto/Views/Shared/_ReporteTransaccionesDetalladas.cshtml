@model ReporteTransaccionesDetalladas
@{
    var resumenMontos = new ResumenMontosViewModel()
            {
                Ingresos = Model.BalanceIngreso,
                Gastos = Model.BalanceGastos,
                Total = Model.Total
            };
}

<partial name="_ControlDeSeccionesPorFechas" model="@Model.FechaInicio" />

<div class="row justify-content-center">
    <div class="col-10">

        <partial name="_ResumenMontos" model="@resumenMontos" />

        @if (Model.TransaccionesAgrupadas.Count() == 0)
        {
            <div class="text-center">
                <h5>No hay transacciones registradas</h5>
            </div>
        }
        else
        {
            <table class="table">
                <tbody>
                    @foreach (var transaccionesAgrupadas in Model.TransaccionesAgrupadas)
                    {
                        <tr style="background-color:lightblue; font-size: 26px">
                            <td colspan="3">
                                @transaccionesAgrupadas.FechaTransaccion.Day
                                <span class="badge bg-secondary">@transaccionesAgrupadas.FechaTransaccion.ToString("ddd")</span>
                            </td>
                            <td class="activo">@formatoMiles(transaccionesAgrupadas.BalanceIngreso)</td>
                            <td class="pasivo">@formatoMiles(transaccionesAgrupadas.BalanceGasto)</td>
                        </tr>
                        foreach (var transaccion in transaccionesAgrupadas.Transacciones)
                        {
                            <tr style="vertical-align: middle">
                                <td><a class="btn btn-primary" asp-controller="Transacciones" asp-action="Editar" asp-route-id="@transaccion.Id" asp-route-urlRetorno="@ViewBag.urlRetorno"><i class="bi-pencil"></i></a></td>
                                <td>@transaccion.Categoria</td>
                                <td>@transaccion.Cuenta</td>
                                <td class="activo">@(transaccion.TipoOperacionId == TipoOperacion.Ingreso ? transaccion.Monto.ToString("N") : null)</td>
                                <td class="pasivo">@(transaccion.TipoOperacionId == TipoOperacion.Gasto ? transaccion.Monto.ToString("N") : null)</td>

                            </tr>
                        }

                    }
                </tbody>
            </table>
        }

    </div>
</div>






@{
    string formatoMiles(decimal balance)
    {
        return Math.Abs(balance).ToString("N");
    }

    string claseBalance(decimal balance)
    {
        return balance >= 0 ? "activo" : "pasivo";
    }
}